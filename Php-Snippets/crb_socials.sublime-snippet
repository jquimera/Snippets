<snippet>
	<tabTrigger>crb_socials</tabTrigger>
	<content><![CDATA[
function crb_section_socials_overlay($target = 'article-overlay', $post_id) {
	// $targets_list = array('article-overlay', 'article-socials');

	if ( empty($post_id) ) {
		$post_id = get_the_id();
	}

	$facebook_count = crb_facebook_share_count($post_id);
	$twitter_count = crb_twitter_share_count($post_id);
	$google_count = crb_google_plus_share_count($post_id);
	?>

	<?php if ( $target == 'article-overlay' ): ?>
		<div class="article-overlay">
			<?php $crb_social_title_overlay = carbon_get_theme_option('crb_social_title_overlay'); ?>
			<?php if ( !empty($crb_social_title_overlay) ): ?>
				<p><?php echo esc_html($crb_social_title_overlay); ?></p>
			<?php endif; ?>
	<?php elseif ( $target == 'article-socials' ): ?>
		<div class="article-actions">
			<div class="article-socials">
	<?php endif ?>
		<div class="article-share-btns">
			<ul>
				<li>
					<a href="https://www.facebook.com/sharer/sharer.php?u=<?php the_permalink(); ?>">
						<i class="icon-facebook"></i>

						<?php if ( $target == 'article-socials' ) {
							echo $facebook_count;
						} ?>
					</a>
				</li>
				
				<li>
					<a href="https://twitter.com/home?status=<?php the_permalink(); ?>">
						<i class="icon-twitter"></i>

						<?php if ( $target == 'article-socials' ) {
							echo $twitter_count;
						} ?>
					</a>
				</li>
				
				<li>
					<a href="https://plus.google.com/share?url=<?php echo the_permalink(); ?>">
						<i class="icon-mail"></i>

						<?php if ( $target == 'article-socials' ) {
							echo $google_count;
						} ?>
					</a>
				</li>
				
				<?php if ( $target == 'article-overlay' ): ?>
					<li>
						<a href="#">
							<?php echo ( $facebook_count + $twitter_count + $google_count ); ?>
						</a>
					</li>
				<?php endif; ?>
			</ul>
		</div>
	</div>
	<?php
}

/* ==========================================================================
	# Socials Extractors
========================================================================== */
/**
 * Get tweet count from Twitter API (v1.1)
 */
function crb_twitter_share_count( $post_id ) {
	
	// Check for transient
	if ( ! ( $count = get_transient( 'crb_twitter_share_count' . $post_id ) ) ) {
	
		// Do API call
		$response = wp_remote_retrieve_body( wp_remote_get( 'https://cdn.api.twitter.com/1/urls/count.json?url=' . urlencode( get_permalink( $post_id ) ) ) );
	
		// If error in API call, stop and don't store transient
		if ( is_wp_error( $response ) )
			return 'error';
	
		// Decode JSON
		$json = json_decode( $response );
	
		// Set total count
		$count = absint( $json->count );
	
		// Set transient to expire every 30 minutes
		set_transient( 'crb_twitter_share_count' . $post_id, absint( $count ), 30 * MINUTE_IN_SECONDS );
	
	}
	
 return absint( $count );
	
}
	
/**
 * Get like count from Facebook FQL
 */
function crb_facebook_share_count( $post_id ) {
	// Check for transient
	if ( ! ( $count = get_transient( 'crb_facebook_share_count' . $post_id ) ) ) {
	
		// Setup query arguments based on post permalink
		$fql  = "SELECT url, ";
		//$fql .= "share_count, "; // total shares
		//$fql .= "like_count, "; // total likes
		//$fql .= "comment_count, "; // total comments
		$fql .= "total_count "; // summed total of shares, likes, and comments (fastest query)
		$fql .= "FROM link_stat WHERE url = '" . get_permalink( $post_id ) . "'";
	
		// Do API call
		$response = wp_remote_retrieve_body( wp_remote_get( 'https://api.facebook.com/method/fql.query?format=json&query=' . urlencode( $fql ) ) );
	
		// If error in API call, stop and don't store transient
		if ( is_wp_error( $response ) )
			return 'error';
	
		// Decode JSON
		$json = json_decode( $response );
	
		// Set total count
		$count = absint( $json[0]->total_count );
	
		// Set transient to expire every 30 minutes
		set_transient( 'crb_facebook_share_count' . $post_id, absint( $count ), 30 * MINUTE_IN_SECONDS );
	
	}
	
	return absint( $count );
}

/**
 * Get share count from Google Plus
 */
function crb_google_plus_share_count($post_id) {
	$args = array(
		'method' => 'POST',
		'headers' => array(
			// setup content type to JSON 
			'Content-Type' => 'application/json'
		),
		// setup POST options to Google API
		'body' => json_encode(array(
			'method' => 'pos.plusones.get',
			'id' => 'p',
			'method' => 'pos.plusones.get',
			'jsonrpc' => '2.0',
			'key' => 'p',
			'apiVersion' => 'v1',
			'params' => array(
				'nolog'=>true,
				'id'=> get_permalink( $post_id ),
				'source'=>'widget',
				'userId'=>'@viewer',
				'groupId'=>'@self'
			) 
		 )),
		 // disable checking SSL sertificates               
		'sslverify'=>false
	);
		
	// retrieves JSON with HTTP POST method for current URL  
	$json_string = wp_remote_post("https://clients6.google.com/rpc", $args);
		
	if (is_wp_error($json_string)){
			// return zero if response is error                             
			return "0";             
	} else {        
			$json = json_decode($json_string['body'], true);                    
			// return count of Google +1 for requsted URL
			return intval( $json['result']['metadata']['globalCounts']['count'] ); 
	}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!-- <tabTrigger>hello</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
