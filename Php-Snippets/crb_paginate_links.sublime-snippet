<snippet>
	<content><![CDATA[
function crb_paginate_links( \$args = '' ) {
	global \$wp_query, \$wp_rewrite;

	// Setting up default values based on the current URL.
	\$pagenum_link = html_entity_decode( get_pagenum_link() );
	\$url_parts    = explode( '?', \$pagenum_link );

	// Get max pages and current page out of the current query, if available.
	\$total   = isset( \$wp_query->max_num_pages ) ? \$wp_query->max_num_pages : 1;
	\$current = get_query_var( 'paged' ) ? intval( get_query_var( 'paged' ) ) : 1;

	// Append the format placeholder to the base URL.
	\$pagenum_link = trailingslashit( \$url_parts[0] ) . '%_%';

	// URL base depends on permalink settings.
	\$format  = \$wp_rewrite->using_index_permalinks() && ! strpos( \$pagenum_link, 'index.php' ) ? 'index.php/' : '';
	\$format .= \$wp_rewrite->using_permalinks() ? user_trailingslashit( \$wp_rewrite->pagination_base . '/%#%', 'paged' ) : '?paged=%#%';

	\$defaults = array(
		'base' => \$pagenum_link, // http://example.com/all_posts.php%_% : %_% is replaced by format (below)
		'format' => \$format, // ?page=%#% : %#% is replaced by the page number
		'total' => \$total,
		'current' => \$current,
		'show_all' => false,
		'first_last' => false,
		'first_text' => __('&laquo; First'),
		'last_text' => __('Last &raquo;'),
		'prev_next' => true,
		'prev_next_force' => true,
		'prev_text' => __('&laquo; Previous'),
		'next_text' => __('Next &raquo;'),
		'end_size' => 1,
		'mid_size' => 2,
		'type' => 'plain',
		'add_args' => array(), // array of query args to add
		'add_fragment' => '',
		'before_page_number' => '',
		'after_page_number' => ''
	);

	\$args = wp_parse_args( \$args, \$defaults );

	if ( ! is_array( \$args['add_args'] ) ) {
		\$args['add_args'] = array();
	}

	// Merge additional query vars found in the original URL into 'add_args' array.
	if ( isset( \$url_parts[1] ) ) {
		// Find the format argument.
		\$format_query = parse_url( str_replace( '%_%', \$args['format'], \$args['base'] ), PHP_URL_QUERY );
		wp_parse_str( \$format_query, \$format_arg );

		// Remove the format argument from the array of query arguments, to avoid overwriting custom format.
		wp_parse_str( remove_query_arg( array_keys( \$format_arg ), \$url_parts[1] ), \$query_args );
		\$args['add_args'] = array_merge( \$args['add_args'], urlencode_deep( \$query_args ) );
	}

	// Who knows what else people pass in \$args
	\$total = (int) \$args['total'];
	if ( \$total < 2 ) {
		return;
	}
	\$current  = (int) \$args['current'];
	\$end_size = (int) \$args['end_size']; // Out of bounds?  Make it the default.
	if ( \$end_size < 1 ) {
		\$end_size = 1;
	}
	\$mid_size = (int) \$args['mid_size'];
	if ( \$mid_size < 0 ) {
		\$mid_size = 2;
	}
	\$add_args = \$args['add_args'];
	\$r = '';
	\$page_links = array();
	\$dots = false;

	if ( \$args['first_last'] ) :
		\$link = str_replace( '%_%', \$args['format'], \$args['base'] );
		\$link = str_replace( '%#%', 1, \$link );
		if ( \$add_args ) {
			\$link = add_query_arg( \$add_args, \$link );
		}
		\$link .= \$args['add_fragment'];

		\$page_links[] = array(
			'link' => esc_url( apply_filters( 'paginate_links', \$link ) ),
			'title' => \$args['first_text'],
			'classes' => 'prev page-numbers',
			'number' => 1,
			'html' => '<a class="prev page-numbers" href="' . esc_url( apply_filters( 'paginate_links', \$link ) ) . '">' . \$args['first_text'] . '</a>',
		);
	endif;
	if ( (\$args['prev_next'] && \$current && 1 < \$current) || \$args['prev_next_force'] ) :
		\$link = str_replace( '%_%', 2 == \$current ? '' : \$args['format'], \$args['base'] );
		\$link = str_replace( '%#%', \$current - 1, \$link );
		if ( \$add_args ) {
			\$link = add_query_arg( \$add_args, \$link );
		}
		\$link .= \$args['add_fragment'];

		/**
		 * Filter the paginated links for the given archive pages.
		 *
		 * @since 3.0.0
		 *
		 * @param string \$link The paginated link URL.
		 */
		\$page_links[] = array(
			'link' => esc_url( apply_filters( 'paginate_links', \$link ) ),
			'title' => \$args['prev_text'],
			'classes' => 'prev page-numbers',
			'number' => \$current - 1,
			'html' => '<a class="prev page-numbers" href="' . esc_url( apply_filters( 'paginate_links', \$link ) ) . '">' . \$args['prev_text'] . '</a>',
		);
	endif;
	for ( \$n = 1; \$n <= \$total; \$n++ ) :
		if ( \$n == \$current ) :
			\$page_links[] = array(
				'link' => false,
				'title' => \$args['before_page_number'] . number_format_i18n( \$n ) . \$args['after_page_number'],
				'classes' => 'page-numbers current',
				'number' => 'page-numbers current',
				'html' => "<span class='page-numbers current'>" . \$args['before_page_number'] . number_format_i18n( \$n ) . \$args['after_page_number'] . "</span>",
			);
			\$dots = true;
		else :
			if ( \$args['show_all'] || ( \$n <= \$end_size || ( \$current && \$n >= \$current - \$mid_size && \$n <= \$current + \$mid_size ) || \$n > \$total - \$end_size ) ) :
				\$link = str_replace( '%_%', 1 == \$n ? '' : \$args['format'], \$args['base'] );
				\$link = str_replace( '%#%', \$n, \$link );
				if ( \$add_args ) {
					\$link = add_query_arg( \$add_args, \$link );
				}
				\$link .= \$args['add_fragment'];

				/** This filter is documented in wp-includes/general-template.php */
				\$page_links[] = array(
					'link' => esc_url( apply_filters( 'paginate_links', \$link ) ),
					'title' => \$args['before_page_number'] . number_format_i18n( \$n ) . \$args['after_page_number'],
					'classes' => 'page-numbers',
					'number' => 'page-numbers',
					'html' => "<a class='page-numbers' href='" . esc_url( apply_filters( 'paginate_links', \$link ) ) . "'>" . \$args['before_page_number'] . number_format_i18n( \$n ) . \$args['after_page_number'] . "</a>",
				);
				\$dots = true;
			elseif ( \$dots && ! \$args['show_all'] ) :
				\$page_links[] = array(
					'link' => false,
					'title' => __( '&hellip;' ),
					'classes' => 'page-numbers dots',
					'number' => 'page-numbers dots',
					'html' => '<span class="page-numbers dots">' . __( '&hellip;' ) . '</span>',
				);
				\$dots = false;
			endif;
		endif;
	endfor;
	if ( \$args['prev_next'] && \$current && ( \$current < \$total || -1 == \$total ) ) :
		\$link = str_replace( '%_%', \$args['format'], \$args['base'] );
		\$link = str_replace( '%#%', \$current + 1, \$link );
		if ( \$add_args ) {
			\$link = add_query_arg( \$add_args, \$link );
		}
		\$link .= \$args['add_fragment'];

		/** This filter is documented in wp-includes/general-template.php */
		\$page_links[] = array(
			'link' => esc_url( apply_filters( 'paginate_links', \$link ) ),
			'title' => \$args['next_text'],
			'classes' => 'next page-numbers',
			'number' => 'next page-numbers',
			'html' => '<a class="next page-numbers" href="' . esc_url( apply_filters( 'paginate_links', \$link ) ) . '">' . \$args['next_text'] . '</a>',
		);
	endif;
	if ( \$args['first_last'] ) :
		\$link = str_replace( '%_%', \$args['format'], \$args['base'] );
		\$link = str_replace( '%#%', \$n, \$link );
		if ( \$add_args ) {
			\$link = add_query_arg( \$add_args, \$link );
		}
		\$link .= \$args['add_fragment'];

		/** This filter is documented in wp-includes/general-template.php */
		\$page_links[] = array(
			'link' => esc_url( apply_filters( 'paginate_links', \$link ) ),
			'title' => \$args['last_text'],
			'classes' => 'next page-numbers',
			'number' => 'next page-numbers',
			'html' => '<a class="next page-numbers" href="' . esc_url( apply_filters( 'paginate_links', \$link ) ) . '">' . \$args['last_text'] . '</a>',
		);
	endif;

	switch ( \$args['type'] ) {
		case 'array' :
			return \$page_links;

		case 'list' :
			\$r .= "<ul class='page-numbers'>\n\t<li>";
			\$r .= join("</li>\n\t<li>", wp_list_pluck(\$page_links, 'html'));
			\$r .= "</li>\n</ul>\n";
			break;

		default :
			\$r = join("\n", wp_list_pluck(\$page_links, 'html'));
			break;
	}
	return \$r;
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>crb_paginate_links</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.php - variable.other.php</scope>
	 <!-- Optional: Description to show in the menu -->
	<description> with args</description>
</snippet>